name: CD

on:
  push:
    branches: [ "develop" ]

jobs:
  deploy-ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: notify

    steps: 
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '21'


    - name: make application-secret.yml
      run: |
        touch ./src/main/resources/application-secret.yml
        echo "${{ secrets.APPLICATION_SECRET }}" > ./src/main/resources/application-secret.yml
      shell: bash

    - name: make chat-prompt.txt
      run: |
        touch ./src/main/resources/chat-prompt.txt
        echo "${{ secrets.CHAT_PROMPT }}" > ./src/main/resources/chat-prompt.txt
      shell: bash

    - name: make chat-summary-prompt.txt
      run: |
        touch ./src/main/resources/chat-summary-prompt.txt
        echo "${{ secrets.CHAT_SUMMARY_PROMPT }}" > ./src/main/resources/chat-summary-prompt.txt
      shell: bash

    - name: make memo-summary-prompt.txt
      run: |
        touch ./src/main/resources/memo-summary-prompt.txt
        echo "${{ secrets.MEMO_SUMMARY_PROMPT }}" > ./src/main/resources/memo-summary-prompt.txt
      shell: bash
      
    - name: make ability-analysis-prompt.txt
      run: |
        cat <<EOF > ./src/main/resources/ability-analysis-prompt.txt
        ${{ secrets.ABILITY_ANALYSIS_PROMPT }}
        EOF
      shell: bash


    - name: 빌드
      run: |
          chmod +x gradlew
          ./gradlew build -x test
      shell: bash

    - name: docker build 가능하도록 환경 설정
      uses: docker/setup-buildx-action@v2.9.1
      
    - name: docker hub에로그인
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
        password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN }}

    - name: docker image 빌드 및 푸시
      run: |
        docker build --platform linux/amd64 -t corecord/notify .
        docker push corecord/notify

  deploy-cd:      
    needs: deploy-ci
    runs-on: ubuntu-22.04
    steps:
    - name: 도커 컨테이너 실행
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.RELEASE_HOST }}
        username: ${{ secrets.RELEASE_USERNAME }}
        key: ${{ secrets.RELEASE_KEY }}
        script: |
          sudo chmod +x /home/ubuntu/deploy.sh
          sudo /home/ubuntu/deploy.sh      
